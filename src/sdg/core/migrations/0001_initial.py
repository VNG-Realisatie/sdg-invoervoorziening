# Generated by Django 2.2.24 on 2021-08-17 14:28

import ckeditor.fields
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import sdg.core.models.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='LokaleOverheid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_naam', models.CharField(help_text='De naam van de verantwoordelijke contactpersoon.', max_length=40, verbose_name='contact naam')),
                ('contact_website', models.URLField(blank=True, help_text='De website van de verantwoordelijke contactpersoon.', null=True, verbose_name='contact website')),
                ('contact_telefoonnummer', models.CharField(blank=True, help_text='Het telefoonnummer van de verantwoordelijke contactpersoon.', max_length=20, null=True, verbose_name='contact telefoonnummer')),
                ('contact_emailadres', models.EmailField(blank=True, help_text='Het e-mailadres van de verantwoordelijke contactpersoon.', max_length=254, null=True, verbose_name='contact emailadres')),
            ],
            options={
                'verbose_name': 'lokale overheid',
                'verbose_name_plural': 'lokale overheden',
            },
        ),
        migrations.CreateModel(
            name='OverheidOrganisatie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_naam', models.CharField(help_text='De naam van de verantwoordelijke contactpersoon.', max_length=40, verbose_name='contact naam')),
                ('contact_website', models.URLField(blank=True, help_text='De website van de verantwoordelijke contactpersoon.', null=True, verbose_name='contact website')),
                ('contact_telefoonnummer', models.CharField(blank=True, help_text='Het telefoonnummer van de verantwoordelijke contactpersoon.', max_length=20, null=True, verbose_name='contact telefoonnummer')),
                ('contact_emailadres', models.EmailField(blank=True, help_text='Het e-mailadres van de verantwoordelijke contactpersoon.', max_length=254, null=True, verbose_name='contact emailadres')),
                ('naam', models.CharField(help_text='De naam van de overheidsorganisatie.', max_length=40, verbose_name='naam')),
            ],
            options={
                'verbose_name': 'organisatie',
                'verbose_name_plural': 'organisaties',
            },
        ),
        migrations.CreateModel(
            name='ProductGeneriekInformatie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taal', models.CharField(choices=[('NL', 'Nederlands'), ('EN', 'Engels')], help_text='De taal waarin de betreffende tekst is geschreven.ISO 639 (https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)', max_length=3, verbose_name='taal')),
                ('product_titel', models.CharField(help_text='De titel van het decentrale product, die immers kan afwijken van de landelijke titel.', max_length=50, verbose_name='product titel')),
                ('generieke_tekst', ckeditor.fields.RichTextField(help_text='De Nationale Portalen schrijven een inleidende, algemene tekst over het product. Het idee is dat deze ', verbose_name='generieke tekst')),
                ('korte_omschrijving', models.CharField(help_text='Korte omschrijving van wat er op de pagina staat, gebruikt in de meta tags van de productpagina (meta name="description"). Deze tekst wordt gebruikt om te tonen wanneer de pagina wordt gevonden in een zoekmachine. ', max_length=80, verbose_name='korte omschrijving')),
                ('datum_check', models.DateTimeField(help_text="De informatie over het product kan worden gewijzigd en gecontroleerd op actualiteit (gecheckt). De Nationale portalen houden bij wanneer de informatie voor het laasts is 'gecheckt'.  Deze datum wordt op het portaal getoond.", verbose_name='datum check')),
                ('verwijzing_links', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(max_length=1000, verbose_name='url van verwijzing'), blank=True, default=list, help_text="Zowel de Nationale Portalen als de decentrale overheden kunnen een x-tal 'verwijzingen' opnemen bij een product. Voorstel hierbij om zo'n 'verwijzing' te laten bestaan uit een -bij elkaar horende-  beschrijving en hyperlink. De tekst van artikel 9 geeft enkele voorbeelden hiervan: 'richtsnoeren/ NEN-specs bijv en ook links naar de wetgeving (dit laatste is inderdaad te verstaan als vertaling van 'Legal Acts'. Bart heeft dit bij Jurist van bNC (Vanessa) gecheckt. ", size=None)),
                ('landelijke_link', models.URLField(help_text='URL van de productpagina wanneer het een landelijk product betreft of de pagina met enkel generieke beschrijving van een decentraal product, bijvoorbeeld : https://ondernemersplein.kvk.nl/terrasvergunning. gebruikt voor o.a. notificeren, feedback & statistics en het kunnen bekijken van de generieke productinformatie (bv door gebruikers van de gemeentelijke invoervoorziening) ', verbose_name='landelijke link')),
                ('verplicht_product', models.BooleanField(help_text='Geeft aan of decentrale overheden verplicht zijn informatie over dit product te leveren.', verbose_name='verplicht product')),
                ('generieke_link', models.URLField(help_text='URL van de productpagina wanneer het een landelijk product betreft of de pagina met enkel generieke beschrijving van een decentraal product, bijvoorbeeld : https://ondernemersplein.kvk.nl/terrasvergunning. gebruikt voor o.a. notificeren, feedback & statistics en het kunnen bekijken van de generieke productinformatie (bv door gebruikers van de gemeentelijke invoervoorziening) ', verbose_name='generieke link')),
                ('verantwoordelijke_organisatie', models.ForeignKey(help_text='Organisatie verantwoordelijk voor de landelijke informatie', on_delete=django.db.models.deletion.PROTECT, related_name='generiek_informatie', to='core.OverheidOrganisatie', verbose_name='product generiek informatie')),
            ],
            options={
                'verbose_name': 'product generiek informatie',
                'verbose_name_plural': 'product generiek informatie',
            },
        ),
        migrations.CreateModel(
            name='ProductSpecifiekAanvraag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beschikbare_talen', models.CharField(help_text="Naast de taal van de informatie, dient ook aangegeven te worden in welke aanvullende taal/talen de procedure kan worden uitgevoerd. elke productbeschrijving is in één taal (nl of en). De 'additional languages' betreft dus altijd de andere taal (en of nl). Aanname: de portalen richten zich uitsluitend op Nederlands en Engels, geen andere talen.", max_length=255, verbose_name='beschikbare talen')),
                ('procedure_beschrijving', ckeditor.fields.RichTextField(help_text='Procedurebeschrijving.', verbose_name='procedure beschrijving')),
                ('vereisten', ckeditor.fields.RichTextField(help_text='Vereisten auth/id/sign.', verbose_name='vereisten')),
                ('bewijs', ckeditor.fields.RichTextField(help_text='Bewijs (type/format).', verbose_name='bewijs')),
                ('bezwaar_en_beroep', ckeditor.fields.RichTextField(help_text='Bezwaar en beroep.', verbose_name='bezwaar en beroep')),
                ('kosten_en_betaalmethoden', ckeditor.fields.RichTextField(help_text='Kosten en betaalmethoden.', verbose_name='kosten en betaalmethoden')),
                ('uiterste_termijn', ckeditor.fields.RichTextField(help_text='Deadlines.', verbose_name='uiterste termijn')),
                ('wtd_bij_geen_reactie', ckeditor.fields.RichTextField(help_text='Wat te doen bij geen reactie.', verbose_name='wtd bij geen reactie')),
                ('decentrale_procedure_link', models.URLField(help_text='Link naar de procedure voor burgers en / of bedrijven.', verbose_name='decentrale procedure link')),
            ],
            options={
                'verbose_name': 'product specifiek aanvraag',
                'verbose_name_plural': 'product specifiek aanvragen',
            },
        ),
        migrations.CreateModel(
            name='ProductSpecifiekInformatie',
            fields=[
                ('productgeneriekinformatie_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.ProductGeneriekInformatie')),
                ('doelgroep', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('burgers', 'Burgers'), ('bedrijven', 'Bedrijven')], max_length=32), blank=True, default=list, help_text='Geeft aan voor welke doelgroep het product is bedoeld: burgers, bedrijven of burgers en bedrijven. Wordt gebruikt wanneer een portaal informatie over het product ophaalt uit de invoervoorziening. Zo krijgen de ondernemersportalen de ondernemersvariant en de burgerportalen de burgervariant. ', size=None)),
                ('product_titel_decentraal', models.CharField(help_text='De titel van het decentrale product, die immers kan afwijken van de landelijke titel.', max_length=50, verbose_name='product titel decentraal')),
                ('beschikbaar', models.BooleanField(help_text='Geeft aan of het product al dan niet beschikbaar is.', verbose_name='beschikbaar')),
                ('versie', models.PositiveIntegerField(default=1, help_text='Het versienummer van het item.', verbose_name='versie')),
                ('publicatie_datum', models.DateTimeField(help_text='De datum van publicatie van de productspecifieke informatie.', verbose_name='publicatie datum')),
            ],
            options={
                'verbose_name': 'product specifiek informatie',
                'verbose_name_plural': 'product specifiek informatie',
            },
            bases=('core.productgeneriekinformatie', models.Model),
        ),
        migrations.CreateModel(
            name='ProductenCatalogus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kvk_nummer', models.CharField(help_text='Landelijk uniek identificerend administratienummer.', max_length=8, verbose_name='kvk nummer')),
                ('domein', models.CharField(help_text='Een afkorting die wordt gebruikt om het domein aan te duiden.', max_length=5, validators=[sdg.core.models.validators.validate_uppercase], verbose_name='domein')),
                ('versie', models.PositiveIntegerField(default=1, help_text='Het versienummer van het producten catalogus.', verbose_name='versie')),
                ('naam', models.CharField(help_text='De naam van de producten catalogus.', max_length=40, verbose_name='naam')),
                ('toelichting', models.TextField(blank=True, help_text='Toelichting bij het catalogus.', verbose_name='toelichting')),
                ('referentie_catalogus', models.ForeignKey(blank=True, help_text='De catalogus van referentie.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.ProductenCatalogus', verbose_name='referentie catalogus')),
                ('verantwoordelijke_organisatie', models.ForeignKey(help_text='Organisatie verantwoordelijk voor de decentrale informatie.', on_delete=django.db.models.deletion.PROTECT, to='core.LokaleOverheid', verbose_name='verantwoordelijke organisatie')),
            ],
            options={
                'verbose_name': 'producten catalogus',
                'verbose_name_plural': 'productcatalogi',
            },
        ),
        migrations.CreateModel(
            name='Lokatie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lokatie_adres', models.TextField(help_text='De gegevens over het adres van de lokatie.', max_length=1000, verbose_name='lokatie adres')),
                ('lokale_overheid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.LokaleOverheid', verbose_name='lokale overheid')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ProductSpecifiekAanvraag', verbose_name='product')),
            ],
            options={
                'verbose_name': 'lokatie',
                'verbose_name_plural': 'lokaties',
            },
        ),
        migrations.AddField(
            model_name='lokaleoverheid',
            name='bevoegde_organisatie',
            field=models.ForeignKey(help_text='Bevoegd gezag verantwoordelijk voor de procedure.', on_delete=django.db.models.deletion.CASCADE, related_name='bevoegde', to='core.OverheidOrganisatie', verbose_name='bevoegde organisatie'),
        ),
        migrations.AddField(
            model_name='lokaleoverheid',
            name='ondersteunings_organisatie',
            field=models.ForeignKey(help_text='Organisatie voor ondersteuning.', on_delete=django.db.models.deletion.CASCADE, related_name='ondersteunings', to='core.OverheidOrganisatie', verbose_name='ondersteunings organisatie'),
        ),
        migrations.AddField(
            model_name='lokaleoverheid',
            name='verantwoordelijke_organisatie',
            field=models.ForeignKey(help_text='Organisatie verantwoordelijk voor de decentrale informatie.', on_delete=django.db.models.deletion.CASCADE, related_name='verantwoordelijke', to='core.OverheidOrganisatie', verbose_name='verantwoordelijke organisatie'),
        ),
        migrations.CreateModel(
            name='Productuitvoering',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specifieke_tekst', ckeditor.fields.RichTextField(help_text='Decentrale omschrijving.', verbose_name='specifieke tekst')),
                ('verwijzing_links', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(max_length=1000, verbose_name='url van verwijzing'), blank=True, default=list, help_text='Decentrale verwijzingen.', size=None)),
                ('specifieke_link', models.URLField(help_text='URL decentrale productpagina.', verbose_name='specifieke link')),
                ('decentrale_link', models.URLField(help_text='Link naar decentrale productpagina voor burgers en / of bedrijven.', verbose_name='decentrale link')),
                ('datum_wijziging', models.DateTimeField(help_text='Decentrale overheden geven een wijzigingsdatum mee voor hun informatie. Deze datum wordt op het portaal getoond.', verbose_name='datum wijziging')),
                ('product_specifiek_aanvraag', models.ForeignKey(help_text='Referentie naar het product specifiek aanvraag.', on_delete=django.db.models.deletion.CASCADE, to='core.ProductSpecifiekAanvraag', verbose_name='product specifiek aanvraag')),
                ('product_specifiek_informatie', models.ForeignKey(help_text='Referentie naar het product specifiek informatie.', on_delete=django.db.models.deletion.CASCADE, to='core.ProductSpecifiekInformatie', verbose_name='product specifiek informatie')),
            ],
            options={
                'verbose_name': 'productuitvoering',
                'verbose_name_plural': 'productuitvoeringen',
            },
        ),
        migrations.AddField(
            model_name='productspecifiekinformatie',
            name='catalogus',
            field=models.ForeignKey(help_text='Referentie naar de catalogus waartoe dit product behoort.', on_delete=django.db.models.deletion.CASCADE, related_name='producten', to='core.ProductenCatalogus', verbose_name='product specifiek informatie'),
        ),
        migrations.AddField(
            model_name='productspecifiekinformatie',
            name='product',
            field=models.OneToOneField(blank=True, help_text='Object record which corrects the current record', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gerefereerd', to='core.ProductSpecifiekInformatie', verbose_name='refereert aan'),
        ),
        migrations.AddField(
            model_name='productspecifiekaanvraag',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specifiek_aanvraag', to='core.ProductSpecifiekInformatie', verbose_name='lokale overheid'),
        ),
    ]
